#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// dt-formatter: indent = "  "
// dt-formatter: multilineIntegerCellsIndent = "reindent"
// dt-formatter: multilineListCommaStyle = "leading"

&sk {
  /delete-property/ ignore-modifiers;
};

/ {
  combos {
    compatible = "zmk,combos";

    tab {
      key-positions = <2 3>;
      bindings = <&kp TAB>;
    };

    ctrl {
      key-positions = <26 27>;
      bindings = <&kp LCTRL>;
    };

    cmd {
      key-positions = <37 38>;
      bindings = <&kp LCMD>;
    };

    alt {
      key-positions = <39 40>;
      bindings = <&kp LEFT_ALT>;
    };

    shift {
      key-positions = <8 9>;
      bindings = <&kp LSHIFT>;
    };

    caps_word {
      key-positions = <17 18>;
      bindings = <&caps_word>;
    };

    delete {
      key-positions = <32 33>;
      bindings = <&kp DEL>;
    };
  };

  macros {
    greeting: greeting {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      label = "greeting";
      bindings = <&kp H &kp E &kp L &kp L &kp O>;
    };
    rgblayer: rgb_layer {
      compatible = "zmk,behavior-macro-two-param";
      #binding-cells = <2>;
      label = "MOMENTARY_LAYER_WITH_RGB_COLOR";
      bindings
        = <&macro_param_2to2 &rgb_ug RGB_COLOR_HSB_CMD MACRO_PLACEHOLDER &macro_param_1to1>
        , <&macro_press>
        , <&mo MACRO_PLACEHOLDER>
        , <&macro_pause_for_release>
        , <&macro_release>
        , <&macro_param_1to1 &mo 0>
        , <&macro_tap>
        , <&rgb_ug RGB_TOG>
        ;
    };
    shift: with_lshift {
      compatible = "zmk,behavior-macro-one-param";
      #binding-cells = <1>;
      label = "KEY_PRESS_WITH_LEFT_SHIFT_MODIFIER";
      bindings
        = <&macro_press>
        , <&kp LSHFT>
        , <&macro_tap>
        , <&macro_param_1to1 &kp MACRO_PLACEHOLDER>
        , <&macro_release>
        , <&kp LSHFT>
        ;
    };
    as: autoshift {
      compatible = "zmk,behavior-macro-one-param";
      #binding-cells = <1>;
      label = "AUTOSHIFT_KEYPRESS";
      bindings
        = <&macro_press>
        , <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>
        , <&macro_pause_for_release>
        , <&macro_release>
        , <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>
        ;
    };
    mouse_on: mouse_on {
      label = "mouse_on";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&macro_tap>, <&tog 6>;
    };
    mouse_off: mouse_off {
      label = "mouse_off";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&macro_tap>, <&tog 6>;
    };
    lang: lang {
      label = "lang";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp CAPS>;
    };
    calc_on: calc_on {
      label = "calc_on";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&macro_tap>, <&tog 9>;
    };
    calc_off: calc_off {
      label = "calc_off";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&macro_tap>, <&tog 9>;
    };
  };

  behaviors {
    as_ht: autoshift_hold_tap {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      label = "AUTOSHIFT_HOLD_TAP";
      bindings = <&shift>, <&kp>;

      tapping-term-ms = <190>;
    };
    hml: homewrow_mods_left {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      label = "HOMEROW_MODS_LEFT_HAND";
      bindings = <&kp>, <&kp>;

      tapping-term-ms = <200>;
      hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
    };
    hmr: homewrow_mods_right {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      label = "HOMEROW_MODS_RIGHT_HAND";
      bindings = <&kp>, <&kp>;

      tapping-term-ms = <200>;
      hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
    };
    capdance: capdance {
      compatible = "zmk,behavior-tap-dance";
      label = "CAPDANCE";
      #binding-cells = <0>;
      bindings = <&caps_word>, <&kp CAPS>;
    };
    volknob: volume_encoder {
      compatible = "zmk,behavior-sensor-rotate";
      label = "ENCODER_VOLUME_KNOB";
      #sensor-binding-cells = <0>;
      bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
    };
    rgbknob: rgb_encoder {
      compatible = "zmk,behavior-sensor-rotate-var";
      label = "ENCODER_RGB";
      #sensor-binding-cells = <2>;
      bindings = <&rgb_ug>, <&rgb_ug>;
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";

    tri_layer {
      if-layers = <1 2>;
      then-layer = <3>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &trans         &mo 8  &kp Q        &kp W       &kp E        &kp R          &kp T        &kp Y       &kp U       &kp I        &kp O     &kp P         &kp LBKT    &trans
        &mt LGUI CAPS  &kp A  &mt LSHFT S  &mt LALT D  &mt LGUI F   &mt LCTRL G    &mt LCTRL H  &mt LGUI J  &mt LALT K  &mt LSHFT L  &kp SEMI  &mt LGUI SQT
        &mo 8          &kp Z  &kp X        &kp C       &kp V        &kp B          &kp N        &kp M       &kp COMMA   &kp DOT      &kp FSLH  &lt 8 RBKT
                                           &lt 2 ESC   &lt 4 SPACE  &lt 7 TAB      &lt 10 RET   &lt 1 BSPC  &lt 3 DEL
      >;
    };

    arrows_layer {
      bindings = <
        &trans  &none  &none      &none     &none     &none        &none      &kp PG_UP  &kp HOME  &kp UP     &kp END  &kp INS  &kp PSCRN    &trans
        &none   &none  &kp LSHFT  &kp LALT  &kp LGUI  &kp LCTRL    &kp PG_DN  &kp LEFT   &kp DOWN  &kp RIGHT  &none    &none
        &none   &none  &none      &none     &none     &none        &none      &none      &none     &none      &none    &none
                                  &none     &none     &none        &none      &none      &none
      >;
    };

    numbers_layer {
      bindings = <
        &trans  &none  &kp GRAVE     &mt LSHFT N7  &mt LALT N8  &mt LGUI N9    &mt LCTRL BSLH  &none     &none     &none      &none  &none  &none    &trans
        &none   &none  &mt LSHFT N4  &mt LALT N5   &mt LGUI N6  &kp LCTRL      &kp LCTRL       &kp LGUI  &kp LALT  &kp LSHFT  &none  &none
        &mo 5   &none  &mt LSHFT N1  &mt LALT N2   &mt LGUI N3  &kp LCTRL      &none           &none     &none     &none      &none  &none
                                     &kp MINUS     &kp N0       &kp EQUAL      &none           &none     &none
      >;
    };

    symbols_layer {
      bindings = <
        &trans  &none  &kp TILDE   &kp AMPS   &kp STAR   &kp LPAR    &kp PIPE      &none         &none         &none         &none         &none       &none    &trans
        &none   &none  &kp DLLR  &kp PRCNT  &kp CARET  &none       &kp LGUI      &kp LCTRL     &kp LALT      &kp LSHFT     &none         &none
        &none   &none  &kp EXCL    &kp AT     &kp HASH   &none       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
                                   &kp UNDER  &kp RPAR   &kp PLUS    &none         &none         &none
      >;
    };

    f_buttons_layer {
      bindings = <
        &trans            &none              &kp LS(F6)    &mt LSHFT F7  &mt LALT F8  &mt LGUI F9      &mt LCTRL F12  &none      &none     &none      &none  &none  &none    &trans
        &kp LC(LA(LEFT))  &kp LC(LA(RIGHT))  &mt LSHFT F4  &mt LALT F5   &mt LGUI F6  &mt LCTRL F11    &kp LGUI       &kp LCTRL  &kp LALT  &kp LSHFT  &none  &none
        &none             &none              &mt LSHFT F1  &mt LALT F2   &mt LGUI F3  &mt LCTRL F10    &none          &none      &none     &none      &none  &none
                                                           &none         &none        &none            &none          &none      &none
      >;
    };

    audio_layer {
      bindings = <
        &trans  &none  &none       &kp C_VOL_DN  &kp C_MUTE    &kp C_VOL_UP    &none  &none  &none  &none  &none  &none  &none    &trans
        &none   &none  &kp C_PREV  &kp C_PP      &kp C_NEXT    &none           &none  &none  &none  &none  &none  &none
        &none   &none  &none       &kp C_BRI_DN  &kp C_BRI_UP  &none           &none  &none  &none  &none  &none  &none
                                   &none         &none         &none           &none  &none  &none
      >;
    };

    mouse_layer {
      bindings = <
        &trans  &none   &none           &mkp LCLK       &mmv MOVE_UP     &mkp RCLK    &none  &none           &mkp LCLK       &mmv MOVE_UP     &mkp RCLK  &none  &none    &trans
        &none   &tog 6  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none        &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none      &none
        &none   &none   &none           &mkp MCLK       &none            &none        &none  &none           &mkp MCLK       &none            &none      &none
                                        &none           &none            &none        &none  &none           &none
      >;
    };

    move_windows_layer {
      bindings = <
        &trans  &none  &none       &kp LG(N7)  &kp LG(N8)  &kp LG(N9)    &none  &none  &none  &none  &none  &none  &none    &trans
        &none   &none  &kp LG(N4)  &kp LG(N5)  &kp LG(N6)  &none         &none  &none  &none  &none  &none  &none
        &none   &none  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &none         &none  &none  &none  &none  &none  &none
                                   &none       &kp LG(N0)  &none         &none  &none  &none
      >;
    };

    mod_buttons_layer {
      bindings = <
        &trans  &none    &tog 9     &none     &none     &none        &none  &none  &none    &none      &none    &none  &none    &trans
        &none   &tog 6   &kp LSHFT  &kp LALT  &kp LGUI  &kp LCTRL    &none  &none  &none    &none      &none    &none
        &none   &kp RET  &kp BSPC   &kp DEL   &none     &none        &none  &none  &kp ESC  &kp SPACE  &kp TAB  &none
                                    &none     &none     &none        &none  &none  &none
      >;
    };

    calc_layer {
      bindings = <
        &trans  &kt A      &tog 9  &kp N7     &kp N8  &kp N9       &kp BSLH   &kp PG_UP  &kp HOME  &kp UP     &kp END  &kp INS  &kp PSCRN    &trans
        &none   &kp LSHFT  &kp N4  &kp N5     &kp N6  &kp FSLH     &kp PG_DN  &kp LEFT   &kp DOWN  &kp RIGHT  &none    &none
        &none   &none      &kp N1  &kp N2     &kp N3  &none        &kp ESC    &kp SPACE  &kp TAB   &none      &none    &none
                                   &kp MINUS  &kp N0  &kp EQUAL    &kp RET    &kp BSPC   &kp DEL
      >;
    };

    winos_layer {
      bindings = <
        &trans          &mo 8  &kp Q        &kp W       &kp E        &kp R         &kp T       &kp Y        &kp U       &kp I        &kp O     &kp P          &kp LBKT    &trans
        &mt LCTRL CAPS  &kp A  &mt LSHFT S  &mt LALT D  &mt LCTRL F  &mt LGUI G    &mt LGUI H  &mt LCTRL J  &mt LALT K  &mt LSHFT L  &kp SEMI  &mt LCTRL SQT
        &mo 8           &kp Z  &kp X        &kp C       &kp V        &kp B         &kp N       &kp M        &kp COMMA   &kp DOT      &kp FSLH  &lt 8 RBKT
                                            &lt 2 ESC   &lt 4 SPACE  &lt 7 TAB     &lt 2 RET   &lt 1 BSPC   &lt 3 DEL
      >;
    };
  };
};
